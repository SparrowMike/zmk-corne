/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Win {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &mt NUMBER_1 Q  &mt NUMBER_2 W  &mt NUMBER_3 E    &mt NUMBER_4 R  &mt N5 T     &mt NUMBER_6 Y  &mt N7 U     &mt NUMBER_8 I     &mt N9 O         &mt N0 P                &kp BSPC
&trans  &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LCTRL F     &kp G        &kp H           &mt RCTRL J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt LEFT_WIN SEMICOLON  &kp SQT
&trans  &kp Z           &kp X           &mt LC(C) C       &mt LC(V) V     &kp B        &kp N           &kp M        &mt COMMA DOT      &kp SLASH        &trans                  &trans
                                        &kp ESCAPE        &kp TAB         &kp SPACE    &kp RET         &to 1        &studio_unlock
            >;
        };

        Mac {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &trans    &trans    &trans  &trans     &trans  &reset
&trans  &trans  &trans  &trans  &trans  &trans       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &kp SPACE    &kp RET   &to 2     &trans
            >;
        };

        Sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans        &trans        &trans        &trans        &bt BT_CLR      &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &mo 3
                                       &kp LGUI      &trans        &kp SPACE       &kp RET    &trans     &trans
            >;
        };

        Trd {
            // -----------------------------------------------------------------------------------------
            // |      | LCLK| RCLK| MCLK|     |     |   |     |     |     |     |     |      |
            // |      |     | M_UP|     |     |     |   |     | S_UP|     |     |     |      |
            // |      | M_LT| M_DN| M_RT|     |     |   | S_LT| S_DN| S_RT|     |     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&mt LS(KP_NUMBER_1) KP_NUMBER_1  &mt LS(KP_NUMBER_2) KP_NUMBER_2  &mt LS(KP_NUMBER_3) KP_NUMBER_3  &mkp MCLK            &trans               &trans       &mkp LCLK       &trans          &mkp RCLK        &msc SCRL_UP  &trans  &trans
&mt LS(KP_NUMBER_4) KP_NUMBER_4  &trans                           &trans                           &trans               &trans               &trans       &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &trans        &trans  &trans
&trans                           &trans                           &mmv MOVE_DOWN                   &mmv MOVE_RIGHT      &trans               &trans       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans        &trans  &trans
                                                                                                   &kp LA(KP_NUMBER_1)  &kp LC(KP_NUMBER_1)  &kp LA(X)    &to 0           &trans          &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
